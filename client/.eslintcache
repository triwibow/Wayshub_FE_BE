[{"D:\\dumbways\\WaysHub\\client\\src\\pages\\Login.js":"1","D:\\dumbways\\WaysHub\\client\\src\\component\\form\\InputField.js":"2","D:\\dumbways\\WaysHub\\client\\src\\component\\form\\TextAreaField.js":"3","D:\\dumbways\\WaysHub\\client\\src\\pages\\Subscribtion.js":"4","D:\\dumbways\\WaysHub\\client\\src\\component\\card\\Card.js":"5","D:\\dumbways\\WaysHub\\client\\src\\component\\dropdown\\DropdownVideo.js":"6","D:\\dumbways\\WaysHub\\client\\src\\component\\loader\\CardLoader.js":"7","D:\\dumbways\\WaysHub\\client\\src\\component\\navbar\\Navbar.js":"8","D:\\dumbways\\WaysHub\\client\\src\\component\\search\\SearchResult.js":"9","D:\\dumbways\\WaysHub\\client\\src\\context\\AppContext.js":"10","D:\\dumbways\\WaysHub\\client\\src\\component\\form\\Alert.js":"11","D:\\dumbways\\WaysHub\\client\\src\\component\\channel\\ChannelHeader.js":"12","D:\\dumbways\\WaysHub\\client\\src\\component\\preview\\Preview.js":"13","D:\\dumbways\\WaysHub\\client\\src\\component\\modal\\Modal.js":"14","D:\\dumbways\\WaysHub\\client\\src\\component\\comment\\Comment.js":"15","D:\\dumbways\\WaysHub\\client\\src\\component\\loader\\CommentLoader.js":"16","D:\\dumbways\\WaysHub\\client\\src\\pages\\Detail.js":"17","D:\\dumbways\\WaysHub\\client\\src\\pages\\Home.js":"18","D:\\dumbways\\WaysHub\\client\\src\\pages\\ContentCreator.js":"19","D:\\dumbways\\WaysHub\\client\\src\\component\\channel\\ChannelDescription.js":"20","D:\\dumbways\\WaysHub\\client\\src\\component\\modal\\SubscribeModal.js":"21","D:\\dumbways\\WaysHub\\client\\src\\component\\comment\\CommentList.js":"22","D:\\dumbways\\WaysHub\\client\\src\\pages\\MyChannel.js":"23","D:\\dumbways\\WaysHub\\client\\src\\component\\video\\EmptyVideo.js":"24","D:\\dumbways\\WaysHub\\client\\src\\component\\form\\ErrorInfo.js":"25","D:\\dumbways\\WaysHub\\client\\src\\component\\modal\\CommentModal.js":"26","D:\\dumbways\\WaysHub\\client\\src\\component\\video\\Video.js":"27","D:\\dumbways\\WaysHub\\client\\src\\pages\\EditChannel.js":"28","D:\\dumbways\\WaysHub\\client\\src\\App.js":"29","D:\\dumbways\\WaysHub\\client\\src\\component\\sidebar\\Sidebar.js":"30","D:\\dumbways\\WaysHub\\client\\src\\component\\progressbar\\ProgressBar.js":"31","D:\\dumbways\\WaysHub\\client\\src\\component\\dropdown\\DropdownComment.js":"32","D:\\dumbways\\WaysHub\\client\\src\\index.js":"33","D:\\dumbways\\WaysHub\\client\\src\\route\\PrivateRoute.js":"34","D:\\dumbways\\WaysHub\\client\\src\\pages\\Register.js":"35","D:\\dumbways\\WaysHub\\client\\src\\config\\api.js":"36","D:\\dumbways\\WaysHub\\client\\src\\component\\loader\\PageLoader.js":"37","D:\\dumbways\\WaysHub\\client\\src\\component\\form\\SuccessInfo.js":"38","D:\\dumbways\\WaysHub\\client\\src\\component\\loader\\VideoChanelLoader.js":"39","D:\\dumbways\\WaysHub\\client\\src\\component\\loader\\ButtonLoader.js":"40","D:\\dumbways\\WaysHub\\client\\src\\component\\channel\\ChannelVideo.js":"41","D:\\dumbways\\WaysHub\\client\\src\\component\\dropdown\\Dropdown.js":"42"},{"size":4303,"mtime":1608827039105,"results":"43","hashOfConfig":"44"},{"size":2755,"mtime":1608827403306,"results":"45","hashOfConfig":"44"},{"size":2677,"mtime":1608827389073,"results":"46","hashOfConfig":"44"},{"size":2456,"mtime":1608828549665,"results":"47","hashOfConfig":"44"},{"size":3076,"mtime":1608831638849,"results":"48","hashOfConfig":"44"},{"size":711,"mtime":1608831384648,"results":"49","hashOfConfig":"44"},{"size":152,"mtime":1608831617335,"results":"50","hashOfConfig":"44"},{"size":5298,"mtime":1609051920742,"results":"51","hashOfConfig":"44"},{"size":1752,"mtime":1608845953750,"results":"52","hashOfConfig":"44"},{"size":2293,"mtime":1607868668307,"results":"53","hashOfConfig":"44"},{"size":193,"mtime":1607338389053,"results":"54","hashOfConfig":"44"},{"size":1605,"mtime":1608743366832,"results":"55","hashOfConfig":"44"},{"size":504,"mtime":1608744407318,"results":"56","hashOfConfig":"44"},{"size":1019,"mtime":1607798005138,"results":"57","hashOfConfig":"44"},{"size":2042,"mtime":1608754168188,"results":"58","hashOfConfig":"44"},{"size":157,"mtime":1607794850864,"results":"59","hashOfConfig":"44"},{"size":11833,"mtime":1609317267774,"results":"60","hashOfConfig":"44"},{"size":3390,"mtime":1608890170179,"results":"61","hashOfConfig":"44"},{"size":7769,"mtime":1608755858716,"results":"62","hashOfConfig":"44"},{"size":260,"mtime":1607497383402,"results":"63","hashOfConfig":"44"},{"size":741,"mtime":1607848244526,"results":"64","hashOfConfig":"44"},{"size":2990,"mtime":1608754268427,"results":"65","hashOfConfig":"44"},{"size":3830,"mtime":1608743384304,"results":"66","hashOfConfig":"44"},{"size":904,"mtime":1607755454465,"results":"67","hashOfConfig":"44"},{"size":267,"mtime":1606715886659,"results":"68","hashOfConfig":"44"},{"size":1039,"mtime":1607792973617,"results":"69","hashOfConfig":"44"},{"size":5651,"mtime":1609317344163,"results":"70","hashOfConfig":"44"},{"size":8958,"mtime":1608746893538,"results":"71","hashOfConfig":"44"},{"size":2327,"mtime":1607532680710,"results":"72","hashOfConfig":"44"},{"size":3153,"mtime":1608795127330,"results":"73","hashOfConfig":"44"},{"size":392,"mtime":1608748105678,"results":"74","hashOfConfig":"44"},{"size":725,"mtime":1607792854039,"results":"75","hashOfConfig":"44"},{"size":334,"mtime":1607351528885,"results":"76","hashOfConfig":"44"},{"size":649,"mtime":1607534443564,"results":"77","hashOfConfig":"44"},{"size":5738,"mtime":1607578654199,"results":"78","hashOfConfig":"44"},{"size":363,"mtime":1607334220546,"results":"79","hashOfConfig":"44"},{"size":221,"mtime":1607859678547,"results":"80","hashOfConfig":"44"},{"size":205,"mtime":1607577851989,"results":"81","hashOfConfig":"44"},{"size":251,"mtime":1607605350570,"results":"82","hashOfConfig":"44"},{"size":155,"mtime":1607575874689,"results":"83","hashOfConfig":"44"},{"size":989,"mtime":1607754566950,"results":"84","hashOfConfig":"44"},{"size":1456,"mtime":1606659574307,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dpfr11",{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"91"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"109"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"123"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"91"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"91"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\dumbways\\WaysHub\\client\\src\\pages\\Login.js",["183","184"],"D:\\dumbways\\WaysHub\\client\\src\\component\\form\\InputField.js",["185","186","187","188"],"import './form.css';\r\nimport ErrorInfo from './ErrorInfo';\r\n\r\nimport {Fragment, useState, forwardRef, useImperativeHandle, useEffect} from 'react';\r\n\r\n\r\nconst InputField = forwardRef((props, ref) => {\r\n    const [isFocus, setFocus] = useState(false);\r\n    const [submit, setSubmit] = useState(false);\r\n    const [error, setError] = useState({\r\n        status:false,\r\n        messages: \"\"\r\n    });\r\n    const [value, setValue] = useState(props.value);\r\n\r\n    \r\n    const handleInputChange = (event) => {\r\n        setValue(event.target.value);\r\n        setError({\r\n            ...error,\r\n            messages:\"\"\r\n        });\r\n        props.onChange(event.target.name, event.target.value);\r\n\r\n        setFocus(true);\r\n        \r\n    }\r\n\r\n    const doSubmit = () => {\r\n        setSubmit(true);\r\n    }\r\n\r\n    \r\n    const validate = () =>{\r\n        \r\n        for(let i = 0; i < props.validation.length; i++){\r\n            if(props.validation[i] === \"required\"){\r\n                if(!value || value === \"\"){\r\n                    setError({\r\n                        ...error,\r\n                        status:true,\r\n                        messages: `The ${props.placeholder} field must be filled !`\r\n                    });\r\n        \r\n                    return false;\r\n                }\r\n                \r\n            }\r\n\r\n            if(props.validation[i] === \"email\"){\r\n                const mailformat = /[a-z0-9\\._%+!$&*=^|~#%'`?{}/\\-]+@([a-z0-9\\-]+\\.){1,}([a-z]{2,16})/;\r\n                if(!value.match(mailformat)){\r\n                    setError({\r\n                        ...error,\r\n                        status:true,\r\n                        messages: `Not valid email !`\r\n                    });\r\n\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        setError({\r\n            status: false\r\n        });\r\n       \r\n        return true;\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(submit){\r\n            setSubmit(false);\r\n            setFocus(false);\r\n            setValue('')\r\n        }\r\n\r\n        if(isFocus){ \r\n            validate();\r\n        }\r\n    }, [value, submit]);\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            validate: () => validate(),\r\n            doSubmit: () => doSubmit()\r\n        }\r\n    })\r\n\r\n    return(\r\n        <Fragment>\r\n            <input \r\n                type={props.type} \r\n                placeholder={props.placeholder} \r\n                name={props.name} \r\n                onChange={(event)=>{handleInputChange(event)}}\r\n                autoComplete={props.autoComplete}\r\n                value={value}\r\n            />\r\n            {error.status && (<ErrorInfo messages={error.messages}/>)}\r\n        </Fragment>\r\n    )\r\n})\r\n\r\nexport default InputField;",["189","190"],"D:\\dumbways\\WaysHub\\client\\src\\component\\form\\TextAreaField.js",["191","192","193","194"],"import './form.css';\r\n\r\nimport ErrorInfo from './ErrorInfo';\r\nimport {Fragment, useState, forwardRef, useImperativeHandle, useEffect} from 'react';\r\n\r\nconst TextAreaField = forwardRef((props,ref) => {\r\n    const [isFocus, setFocus] = useState(false);\r\n    const [submit, setSubmit] = useState(false);\r\n\r\n    const [error, setError] = useState({\r\n        status:false,\r\n        messages: \"\"\r\n    });\r\n    const [value, setValue] = useState(props.value);\r\n\r\n    \r\n    const handleInputChange = (event) => {\r\n        setValue(event.target.value);\r\n        setError({\r\n            messages:\"\"\r\n        });\r\n        props.onChange(event.target.name, event.target.value);\r\n        setFocus(true);\r\n    }\r\n\r\n    const doSubmit = () => {\r\n        setSubmit(true);\r\n    }\r\n    \r\n    const validate = () =>{\r\n        for(let i = 0; i < props.validation.length; i++){\r\n            if(props.validation[i] === \"required\"){\r\n                if(!value || value === \"\"){\r\n                    setError({\r\n                        ...error,\r\n                        status:true,\r\n                        messages: `The ${props.placeholder} field must be filled !`\r\n                    });\r\n        \r\n                    return false;\r\n                } \r\n            }\r\n\r\n            if(props.validation[i] === \"email\"){\r\n                const mailformat = /[a-z0-9\\._%+!$&*=^|~#%'`?{}/\\-]+@([a-z0-9\\-]+\\.){1,}([a-z]{2,16})/;\r\n                if(!value.match(mailformat)){\r\n                    setError({\r\n                        ...error,\r\n                        status:true,\r\n                        messages: `Not valid email !`\r\n                    });\r\n        \r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        setError({\r\n            status: false\r\n        });\r\n        return true;\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(submit){\r\n            setSubmit(false);\r\n            setFocus(false);\r\n            setValue('');\r\n        }\r\n\r\n        if(isFocus){\r\n            validate();\r\n        }\r\n    }, [value, submit]);\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            validate: () => validate(),\r\n            doSubmit: () => doSubmit()\r\n        }\r\n    })\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <textarea\r\n                placeholder={props.placeholder} \r\n                name={props.name} \r\n                onChange={(event) => {handleInputChange(event)}}\r\n                autoComplete={props.autoComplete}\r\n                value={value}\r\n            ></textarea>\r\n            {error.status && (<ErrorInfo messages={error.messages}/>)}\r\n        </Fragment>\r\n    )\r\n})\r\n\r\nexport default TextAreaField;","D:\\dumbways\\WaysHub\\client\\src\\pages\\Subscribtion.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\card\\Card.js",["195"],"D:\\dumbways\\WaysHub\\client\\src\\component\\dropdown\\DropdownVideo.js",[],["196","197"],"D:\\dumbways\\WaysHub\\client\\src\\component\\loader\\CardLoader.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\navbar\\Navbar.js",["198","199"],"import {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport './navbar.css';\r\nimport add_video_icon from '../../icon/add_video_icon.svg';\r\nimport add_video_icon_active from '../../icon/add_video_icon_active.svg';\r\nimport Dropdown from '../dropdown/Dropdown';\r\nimport SearchResult from '../search/SearchResult';\r\nimport {API} from '../../config/api';\r\n\r\nconst Navbar = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadResult, setLoadResult] = useState(false);\r\n    const [loadShowMore, setLoadShowMore] = useState(false);\r\n    const [result, setResult] = useState(false);\r\n    const [videos, setVideos] = useState([]);\r\n    const [limit, setLimit] = useState(4);\r\n    const [finish, setFinish] = useState(false);\r\n    const currentUser = JSON.parse(localStorage.getItem('user'));\r\n    const pathName = window.location.pathname;\r\n    const [isDropdown, setDropdown] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const [formData, setFormData] = useState({\r\n        keyword: ''\r\n    });\r\n\r\n    const handleDropdown = () => {\r\n        isDropdown? setDropdown(false):setDropdown(true);\r\n    }\r\n\r\n    const getUser = () => {\r\n        if(!currentUser){\r\n            setLoading(true);\r\n        } else {\r\n            setLoading(false);\r\n            \r\n        }\r\n    }\r\n\r\n    const handleInputChange = async (event) => {\r\n        try {\r\n            setResult(true);\r\n            setLoadResult(true);\r\n            setFinish(false);\r\n            if(event.target.value === \"\"){\r\n                setVideos([]);\r\n                setResult(false);\r\n                setFormData({\r\n                    keyword: ''\r\n                })\r\n                setLoadResult(false);\r\n                return;\r\n            }\r\n            const body = {\r\n                keyword: event.target.value,\r\n                offset: 0,\r\n                limit\r\n            }\r\n\r\n            const response = await API.post('/search', body);\r\n            console.log(response.data.data.videos)\r\n\r\n            if(response.data.status !== \"success\"){\r\n                setVideos([]);\r\n                setResult(false);\r\n                setFormData({\r\n                    keyword: ''\r\n                })\r\n                setLoadResult(false)\r\n                return;\r\n            }\r\n\r\n            setFormData({\r\n                keyword: event.target.value\r\n            });\r\n\r\n            setVideos(\r\n                response.data.data.videos\r\n            )\r\n\r\n            setLoadResult(false);\r\n\r\n            if(response.data.data.videos.length === 0){\r\n                setVideos([]);\r\n            }\r\n\r\n          \r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const showMore = async () => {\r\n        try {\r\n            setLoadShowMore(true);\r\n\r\n            const tmpData = [...videos];\r\n            const lastIndex = tmpData.length;\r\n\r\n            const body = {\r\n                keyword: formData.keyword,\r\n                offset : tmpData.length,\r\n                limit\r\n            }\r\n\r\n            const response = await API.post('/search', body);\r\n\r\n            for(let i = 0; i < response.data.data.videos.length; i++){\r\n                tmpData[lastIndex + i] = response.data.data.videos[i]\r\n            }\r\n\r\n            if(response.data.data.videos.length === 0){\r\n                setFinish(true);\r\n            }\r\n\r\n            setVideos(tmpData);\r\n            setLoadShowMore(false)\r\n\r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    },[currentUser])\r\n\r\n    useEffect(() => {\r\n        return history.listen(() => {\r\n            setDropdown(false);\r\n        })\r\n    }, [history]);\r\n\r\n    return(\r\n        <div className=\"navbar\">\r\n            <div className=\"search-bar\">\r\n                <input type=\"text\" placeholder=\"Search...\" onChange={handleInputChange} name=\"keyword\" autoComplete=\"off\"/>\r\n                {result && (\r\n                    <SearchResult \r\n                        videos={videos} \r\n                        showMore={showMore} \r\n                        isFinish={finish} \r\n                        loading={loadResult}\r\n                        loadShowMore={loadShowMore}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className=\"navbar-menu\">\r\n                <ul className=\"navbar-menu-list\">\r\n                    <li className=\"navbar-menu-item\">\r\n                        <Link to='/add' className=\"navbar-menu-link link\">\r\n                            <img src={pathName === '/add'? add_video_icon_active:add_video_icon} alt=\"add_video_icon\"/>\r\n                            <span className={pathName === '/add'? 'active':''}>Add Video</span>\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"navbar-menu-item\">\r\n                        <button className=\"navbar-menu-button\" onClick={handleDropdown}>\r\n                            {loading && !currentUser ? \"\":<img src={JSON.parse(currentUser.photo).path} alt=\"add_video_icon\"/>}\r\n                        </button>\r\n                        {isDropdown ? <Dropdown/>: \"\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","D:\\dumbways\\WaysHub\\client\\src\\component\\search\\SearchResult.js",[],["200","201"],"D:\\dumbways\\WaysHub\\client\\src\\context\\AppContext.js",[],["202","203"],"D:\\dumbways\\WaysHub\\client\\src\\component\\form\\Alert.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\channel\\ChannelHeader.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\preview\\Preview.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\modal\\Modal.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\comment\\Comment.js",[],["204","205"],"D:\\dumbways\\WaysHub\\client\\src\\component\\loader\\CommentLoader.js",[],"D:\\dumbways\\WaysHub\\client\\src\\pages\\Detail.js",["206","207"],"D:\\dumbways\\WaysHub\\client\\src\\pages\\Home.js",["208","209"],"import { useState, useEffect } from 'react';\r\n\r\n// css\r\nimport '../App.css';\r\n\r\n// component\r\nimport Sidebar from '../component/sidebar/Sidebar';\r\nimport Navbar from '../component/navbar/Navbar';\r\nimport Card from '../component/card/Card';\r\nimport PageLoader from '../component/loader/PageLoader';\r\nimport ButtonLoader from '../component/loader/ButtonLoader';\r\n\r\n// data\r\nimport { API } from '../config/api';\r\n\r\nconst Home = () => {\r\n\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [videos, setVideos] = useState([]);\r\n    const [limit, setLimit] = useState(8);\r\n    const [isFinish, setIsFinish] = useState(false);\r\n    const [loadShowMore, setLoadShowMore] = useState(false);\r\n\r\n    const getVideos = async () => {\r\n        try {\r\n            setLoading(true);\r\n\r\n            const response = await API.get(`/videos/${0}/${limit}`);\r\n\r\n            if(response.data.status !== \"success\"){\r\n                setError(true);\r\n                return;\r\n            }\r\n\r\n            setVideos(response.data.data.videos);\r\n            setLoading(false);\r\n\r\n        } catch(err){\r\n            console.log(err);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const showMore = async () => {\r\n        try {\r\n            setLoadShowMore(true);\r\n            const tmpData = [...videos];\r\n            const lastIndex = tmpData.length;\r\n\r\n            const response = await API.get(`/videos/${lastIndex}/${limit}`);\r\n\r\n            if(response.data.data.videos.length === 0){\r\n                setIsFinish(true);\r\n            }\r\n\r\n            for(let i = 0; i < response.data.data.videos.length; i++){\r\n                tmpData[lastIndex + i] = response.data.data.videos[i]\r\n            }\r\n\r\n            setVideos(tmpData);\r\n            setLoadShowMore(false);\r\n        } catch(err){\r\n            console.log(err);\r\n            setLoadShowMore(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getVideos();\r\n    }, []);\r\n\r\n   return(\r\n    <div className=\"wrapper\">\r\n        <Sidebar />\r\n        <div className=\"container\">\r\n            <Navbar />\r\n            {error ? (\r\n                <h1>Server Error</h1>\r\n            ): loading ? (\r\n                <PageLoader />\r\n            ):(\r\n                <>\r\n                    <div className=\"card-content\">\r\n                        {videos.map(video => {                       \r\n                            return <Card \r\n                                        key={video.id} \r\n                                        data={video}\r\n                                        edit={false} \r\n                                    />\r\n                        })}\r\n                    </div>\r\n        \r\n                    {isFinish ? (\r\n                        null\r\n                    ):(\r\n                        <div className=\"show-more-videos-wrapper\">\r\n                            <button onClick={showMore} className=\"show-more-videos\">\r\n                                {loadShowMore ? (\r\n                                    <ButtonLoader />\r\n                                ): (\r\n                                    \"Show More\"\r\n                                )}    \r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    </div>\r\n        \r\n   )\r\n}\r\n\r\nexport default Home;","D:\\dumbways\\WaysHub\\client\\src\\pages\\ContentCreator.js",["210","211"],"import { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n\r\nimport ChannelVideo from '../component/channel/ChannelVideo';\r\n\r\nimport Sidebar from '../component/sidebar/Sidebar';\r\nimport Navbar from '../component//navbar/Navbar';\r\nimport VideoChanelLoader from '../component/loader/VideoChanelLoader';\r\nimport SubscribeModal from '../component/modal/SubscribeModal';\r\nimport EmptyVideo from '../component/video/EmptyVideo';\r\n\r\nimport { AppContext } from '../context/AppContext';\r\nimport { API } from '../config/api';\r\n\r\n\r\nconst ContentCreator = () => {\r\n    const [state, dispatch] = useContext(AppContext);\r\n    const [isSubscribe, setIsSubscribe] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [chanel, setChanel] = useState([]);\r\n    const [videos, setVideos] = useState([]);\r\n    const [subscribers, setSubscribers] = useState();\r\n    const { id } = useParams();\r\n    const router = useHistory();\r\n\r\n    const [modal, setModal] = useState({\r\n        status: false,\r\n        message: \"\"\r\n    });\r\n\r\n    const closeModal = () => {\r\n        setModal({\r\n            status: false,\r\n            message: \"\"\r\n        });\r\n    }\r\n\r\n    const getSubscribtion = async () => {\r\n        try {\r\n            const subscribtions = await API.get('/subscribe');\r\n\r\n            if(subscribtions.data.status === \"success\"){\r\n                dispatch({\r\n                    type: \"LOAD_SUBSCRIBTION\",\r\n                    payload: subscribtions.data.data\r\n                });\r\n                return;\r\n            }\r\n\r\n        } catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const getChanelById = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const currentUser = await JSON.parse(localStorage.getItem('user'));\r\n            const response = await API.get(`/chanel/${id}`);\r\n\r\n            if(response.data.status !== \"success\"){\r\n                setError(true);\r\n                return;\r\n            }\r\n\r\n            if(currentUser.id === response.data.data.chanel.id){\r\n                router.push('/my-channel');\r\n            }\r\n\r\n            const videosByChanelId = await API.get(`/chanel/${id}/videos`);\r\n            \r\n            if(videosByChanelId.data.status !== \"success\"){\r\n                setError(true);\r\n                return;\r\n            } \r\n\r\n            setChanel(response.data.data.chanel);\r\n            setVideos(videosByChanelId.data.data.videos);\r\n            setSubscribers(response.data.data.chanel.subscribers.length);\r\n           \r\n            setLoading(false);\r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const doSubscribe = async () => {\r\n        try {\r\n\r\n            const body = {\r\n                chanelId: chanel.id\r\n            }\r\n\r\n            \r\n            const response = await API.post('/subscribe', body);\r\n\r\n            if(response.data.status === \"success\"){\r\n                setIsSubscribe(true);\r\n                setModal({\r\n                    status: true,\r\n                    message: \"Subscribe to this channel\"\r\n                });\r\n                setSubscribers(subscribers + 1);\r\n                const subscribe = [...state.subscribtion];\r\n                subscribe.push(response.data.data.subscribe.chanel);\r\n                const subsbribtionAfterSubscribe = {\r\n                    subscribtion: subscribe\r\n                }\r\n\r\n                dispatch({\r\n                    type: \"SUBSCRIBE\",\r\n                    payload: subsbribtionAfterSubscribe\r\n                });\r\n                return;\r\n            }\r\n            \r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const doUnSubscribe = async () => {\r\n        try {\r\n\r\n            const chanelId = chanel.id;\r\n\r\n            const response = await API.delete(`/subscribe/${chanelId}`);\r\n\r\n            if(response.data.status === \"success\"){\r\n                setIsSubscribe(false);\r\n                setModal({\r\n                    status: true,\r\n                    message: \"Unsubscribe to this channel\"\r\n                });\r\n                setSubscribers(subscribers - 1);\r\n                const indexUnsubsribe = state.subscribtion.findIndex(subscribtion => subscribtion.id === parseInt(response.data.data.id));\r\n                \r\n                const subscribe = [...state.subscribtion];\r\n                subscribe.splice(indexUnsubsribe, 1);\r\n                const subsbribtionAfterUnSubscribe = {\r\n                    subscribtion: subscribe\r\n                }\r\n\r\n                dispatch({\r\n                    type: \"UNSUBSCRIBE\",\r\n                    payload: subsbribtionAfterUnSubscribe\r\n                });\r\n                return;\r\n            }\r\n            \r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const checkSubscribe = async () => {\r\n        try {\r\n            const body = {\r\n                chanelId: chanel.id\r\n            }\r\n\r\n            const response = await API.post('/check-subscribe', body);\r\n\r\n            if(response.data.status === \"success\"){\r\n                setIsSubscribe(true);\r\n                return\r\n                \r\n            }\r\n\r\n            setIsSubscribe(false);\r\n            return;\r\n            \r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n    }   \r\n\r\n    useEffect(() => {\r\n        getChanelById();\r\n        getSubscribtion();\r\n        return () => {\r\n            setModal({\r\n                status: false,\r\n                message: \"\"\r\n            })\r\n        }\r\n    }, [id]);\r\n\r\n    \r\n    useEffect(() => {\r\n        checkSubscribe();\r\n    }, [chanel.id]);\r\n\r\n    console.log(chanel)\r\n     \r\n    return(\r\n        <div className=\"wrapper\">\r\n            <Sidebar />\r\n            <div className=\"container\">\r\n                <Navbar />\r\n                {modal.status && (<SubscribeModal message={modal.message} closeModal={() => closeModal()} />)}\r\n                \r\n\r\n                {error ? (\r\n                    <h1>Server Error</h1>\r\n                ): loading ? (\r\n                    <VideoChanelLoader />\r\n                ):(\r\n                    <>\r\n                        <div className=\"cover\">\r\n                            <img src={JSON.parse(chanel.cover).path} alt=\"cover\" />\r\n                        </div>\r\n                        <div className=\"channel-wrapper\">\r\n                            <div className=\"channel-header border-bottom\">\r\n                                <img src={JSON.parse(chanel.photo).path} alt=\"foto profil\"/>\r\n                                <div className=\"channel-username\">\r\n                                    <span>{chanel.chanelName}</span>\r\n                                    <span>{subscribers} Subscribers</span>\r\n                                </div>\r\n                                <div className=\"button-wrapper\">\r\n                                {!isSubscribe ? (\r\n                                    <button className=\"btn-subscribe\" onClick={doSubscribe}>Subscribe</button>\r\n                                ):(\r\n                                    <button className=\"btn-unsubscribe\" onClick={doUnSubscribe}>Unsubscribe</button>\r\n                                )}\r\n                                </div>\r\n                            </div>\r\n                            {videos.length > 0? (\r\n                                 <ChannelVideo videos={videos} edit={false} />\r\n                            ): <EmptyVideo myChannel={false} />}\r\n                        </div>\r\n                    </>\r\n                )}\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ContentCreator;","D:\\dumbways\\WaysHub\\client\\src\\component\\channel\\ChannelDescription.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\modal\\SubscribeModal.js",["212"],"import { useEffect, useState } from 'react';\r\nimport './modal.css';\r\n\r\nconst SubscribeModal = (props) => {\r\n\r\n    const [show, setShow] = useState('close');\r\n\r\n\r\n    useEffect(() => {\r\n        setShow(\"show\");\r\n        setTimeout(() => {\r\n            setShow('close');\r\n            props.closeModal();\r\n        }, 2000);\r\n\r\n        return () => {\r\n            setShow('close');\r\n        }\r\n    },[]);\r\n\r\n\r\n    return  (\r\n        <div className={`modal-container-subscribe ${show}`}>\r\n            <div className=\"modal-box-subscribe\">\r\n                <div className=\"modal-header-subscribe\">\r\n                    <h1>{props.message}</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscribeModal;","D:\\dumbways\\WaysHub\\client\\src\\component\\comment\\CommentList.js",["213"],"import './comment.css';\r\nimport menudots from '../../icon/menudots.png';\r\nimport DropdownComment from '../dropdown/DropdownComment';\r\nimport { useState, useEffect } from 'react';\r\nimport CommentModal from '../modal/CommentModal';\r\nimport CommentLoader from '../loader/CommentLoader';\r\n\r\nconst CommentList = (props) => {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [sameUser, setSameUser] = useState(false);\r\n\r\n    const checkUser = () => {\r\n        setLoading(true);\r\n        const chanelId = props.data.chanel.id;\r\n        const currentUserId = props.currentUser.id;\r\n        \r\n        if(chanelId === currentUserId){\r\n            setSameUser(true)\r\n        } else {\r\n            setSameUser(false);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    \r\n    const showDropdown = () => {\r\n        if(showMenu){\r\n            setShowMenu(false);\r\n        } else {\r\n            setShowMenu(true);\r\n        }\r\n    }\r\n\r\n    const showModalDelete = () => {\r\n        setShowMenu(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModalDelete = () => {\r\n        setShowModal(false);\r\n    }\r\n\r\n    const deleteComment = async () => {\r\n        setLoading(true);\r\n        await props.deleteComment(props.data.id);\r\n        setShowModal(false);\r\n        setLoading(false);\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        checkUser();\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"comment-list\">\r\n            {showModal && \r\n                (\r\n                    <CommentModal \r\n                        closeModal={()=> {closeModalDelete()}}\r\n                        actionDelete={() => {deleteComment()}} \r\n                    />\r\n                )}\r\n            <div className=\"triangle-comment\"></div>\r\n            <img className=\"comment-thumbnail\" src={JSON.parse(props.data.chanel.photo).path} alt=\"proifl\"/>\r\n            <div className=\"comment-body\">\r\n                {loading ? (\r\n                    <CommentLoader />\r\n                ):(\r\n                    <>\r\n                        <div className=\"comment\">\r\n                            <h2>{props.data.chanel.chanelName}</h2>\r\n                            <p>{props.data.comment}</p>\r\n                        </div>\r\n                        {sameUser && (\r\n                            <div className=\"comment-menu\">\r\n                                <button onClick={showDropdown}>\r\n                                    <img src={menudots} alt=\"menudots\" />\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n            {showMenu && (\r\n                <DropdownComment \r\n                    showModalDelete={() => {showModalDelete()}} \r\n                    show={showMenu} \r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentList;","D:\\dumbways\\WaysHub\\client\\src\\pages\\MyChannel.js",["214"],"import { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport ChannelHeader from '../component/channel/ChannelHeader';\r\nimport ChannelDescription from '../component/channel/ChannelDescription';\r\nimport ChannelVideo from '../component/channel/ChannelVideo';\r\nimport Sidebar from '../component/sidebar/Sidebar';\r\nimport Navbar from '../component/navbar/Navbar';\r\nimport VideoChanelLoader from '../component/loader/VideoChanelLoader';\r\nimport EmptyVideo from '../component/video/EmptyVideo';\r\n\r\nimport { API } from '../config/api';\r\n\r\nconst MyChannel = () => {\r\n    const [isVideo, setIsVideo] = useState(true);\r\n\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [chanel, setChanel] = useState([]);\r\n    const [videos, setVideos] = useState([]);\r\n    const currentUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const deleteVideo = async (chanelId) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await API.delete(`/video/${chanelId}`);\r\n\r\n            if(response.data.status !== \"success\"){\r\n                setLoading(false);\r\n                console.log(response.data.error.message);\r\n                return;\r\n            }\r\n            getChanelById();\r\n\r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n\r\n    const getChanelById = async () => {\r\n        try {\r\n            setLoading(true);\r\n\r\n            const response = await API.get(`/chanel/${currentUser.id}`);\r\n\r\n            if(response.data.status !== \"success\"){\r\n                setLoading(false);\r\n                setError(true);\r\n                return;\r\n            }\r\n            const videosByChanelId = await API.get(`/chanel/${currentUser.id}/videos`);\r\n            \r\n            if(videosByChanelId.data.status !== \"success\"){\r\n                setLoading(false);\r\n                setError(true);\r\n                return;\r\n            }\r\n\r\n            setChanel(response.data.data.chanel);\r\n            setVideos(videosByChanelId.data.data.videos);\r\n           \r\n            setLoading(false);\r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getChanelById();\r\n    }, []);\r\n\r\n    const handleChannel = (status) => {\r\n        setIsVideo(status)\r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <Sidebar />\r\n            <div className=\"container\">\r\n                <Navbar />\r\n                {error ? (\r\n                    <h1>Server Error</h1>\r\n                ): loading ? (\r\n                    <VideoChanelLoader />\r\n                ):(\r\n                    <>\r\n                        <div className=\"cover\">\r\n                            <img src={JSON.parse(chanel.cover).path} alt=\"cover\" />\r\n                        </div>\r\n                        <div className=\"channel-wrapper\">\r\n                            <ChannelHeader current={(status) => handleChannel(status)} data={chanel}/>\r\n                            {(isVideo)? \r\n                                (videos.length > 0 ? \r\n                                    (\r\n                                        <ChannelVideo \r\n                                            actionDelete={(chanelId => deleteVideo(chanelId))} \r\n                                            videos={videos}\r\n                                            edit={true} \r\n                                        />\r\n                                    ): (<EmptyVideo myChannel={true} />)\r\n                                ):\r\n                                (<ChannelDescription data={chanel} />)\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )}\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default MyChannel;","D:\\dumbways\\WaysHub\\client\\src\\component\\video\\EmptyVideo.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\form\\ErrorInfo.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\modal\\CommentModal.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\video\\Video.js",["215"],"D:\\dumbways\\WaysHub\\client\\src\\pages\\EditChannel.js",["216","217"],"D:\\dumbways\\WaysHub\\client\\src\\App.js",["218"],"D:\\dumbways\\WaysHub\\client\\src\\component\\sidebar\\Sidebar.js",["219","220"],"D:\\dumbways\\WaysHub\\client\\src\\component\\progressbar\\ProgressBar.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\dropdown\\DropdownComment.js",[],"D:\\dumbways\\WaysHub\\client\\src\\index.js",[],"D:\\dumbways\\WaysHub\\client\\src\\route\\PrivateRoute.js",[],"D:\\dumbways\\WaysHub\\client\\src\\pages\\Register.js",[],"D:\\dumbways\\WaysHub\\client\\src\\config\\api.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\loader\\PageLoader.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\form\\SuccessInfo.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\loader\\VideoChanelLoader.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\loader\\ButtonLoader.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\channel\\ChannelVideo.js",[],"D:\\dumbways\\WaysHub\\client\\src\\component\\dropdown\\Dropdown.js",["221"],{"ruleId":"222","severity":1,"message":"223","line":13,"column":12,"nodeType":"224","messageId":"225","endLine":13,"endColumn":17},{"ruleId":"222","severity":1,"message":"226","line":14,"column":12,"nodeType":"224","messageId":"225","endLine":14,"endColumn":19},{"ruleId":"227","severity":1,"message":"228","line":51,"column":44,"nodeType":"229","messageId":"230","endLine":51,"endColumn":45,"suggestions":"231"},{"ruleId":"227","severity":1,"message":"232","line":51,"column":65,"nodeType":"229","messageId":"230","endLine":51,"endColumn":66,"suggestions":"233"},{"ruleId":"227","severity":1,"message":"232","line":51,"column":78,"nodeType":"229","messageId":"230","endLine":51,"endColumn":79,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":82,"column":8,"nodeType":"237","endLine":82,"endColumn":23,"suggestions":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"227","severity":1,"message":"228","line":45,"column":44,"nodeType":"229","messageId":"230","endLine":45,"endColumn":45,"suggestions":"243"},{"ruleId":"227","severity":1,"message":"232","line":45,"column":65,"nodeType":"229","messageId":"230","endLine":45,"endColumn":66,"suggestions":"244"},{"ruleId":"227","severity":1,"message":"232","line":45,"column":78,"nodeType":"229","messageId":"230","endLine":45,"endColumn":79,"suggestions":"245"},{"ruleId":"235","severity":1,"message":"236","line":76,"column":8,"nodeType":"237","endLine":76,"endColumn":23,"suggestions":"246"},{"ruleId":"235","severity":1,"message":"247","line":51,"column":7,"nodeType":"237","endLine":51,"endColumn":9,"suggestions":"248"},{"ruleId":"239","replacedBy":"249"},{"ruleId":"241","replacedBy":"250"},{"ruleId":"222","severity":1,"message":"251","line":16,"column":19,"nodeType":"224","messageId":"225","endLine":16,"endColumn":27},{"ruleId":"235","severity":1,"message":"252","line":126,"column":7,"nodeType":"237","endLine":126,"endColumn":20,"suggestions":"253"},{"ruleId":"239","replacedBy":"254"},{"ruleId":"241","replacedBy":"255"},{"ruleId":"239","replacedBy":"256"},{"ruleId":"241","replacedBy":"257"},{"ruleId":"239","replacedBy":"258"},{"ruleId":"241","replacedBy":"259"},{"ruleId":"222","severity":1,"message":"251","line":24,"column":19,"nodeType":"224","messageId":"225","endLine":24,"endColumn":27},{"ruleId":"235","severity":1,"message":"260","line":319,"column":7,"nodeType":"237","endLine":319,"endColumn":11,"suggestions":"261"},{"ruleId":"222","severity":1,"message":"251","line":21,"column":19,"nodeType":"224","messageId":"225","endLine":21,"endColumn":27},{"ruleId":"235","severity":1,"message":"262","line":71,"column":8,"nodeType":"237","endLine":71,"endColumn":10,"suggestions":"263"},{"ruleId":"235","severity":1,"message":"264","line":190,"column":8,"nodeType":"237","endLine":190,"endColumn":12,"suggestions":"265"},{"ruleId":"235","severity":1,"message":"266","line":195,"column":8,"nodeType":"237","endLine":195,"endColumn":19,"suggestions":"267"},{"ruleId":"235","severity":1,"message":"268","line":19,"column":7,"nodeType":"237","endLine":19,"endColumn":9,"suggestions":"269"},{"ruleId":"235","severity":1,"message":"270","line":54,"column":8,"nodeType":"237","endLine":54,"endColumn":10,"suggestions":"271"},{"ruleId":"235","severity":1,"message":"272","line":70,"column":8,"nodeType":"237","endLine":70,"endColumn":10,"suggestions":"273"},{"ruleId":"235","severity":1,"message":"274","line":83,"column":7,"nodeType":"237","endLine":83,"endColumn":9,"suggestions":"275"},{"ruleId":"222","severity":1,"message":"223","line":14,"column":12,"nodeType":"224","messageId":"225","endLine":14,"endColumn":17},{"ruleId":"235","severity":1,"message":"272","line":228,"column":7,"nodeType":"237","endLine":228,"endColumn":9,"suggestions":"276"},{"ruleId":"235","severity":1,"message":"277","line":67,"column":5,"nodeType":"237","endLine":67,"endColumn":18,"suggestions":"278"},{"ruleId":"222","severity":1,"message":"279","line":3,"column":33,"nodeType":"224","messageId":"225","endLine":3,"endColumn":41},{"ruleId":"235","severity":1,"message":"280","line":40,"column":7,"nodeType":"237","endLine":40,"endColumn":9,"suggestions":"281"},{"ruleId":"222","severity":1,"message":"223","line":11,"column":12,"nodeType":"224","messageId":"225","endLine":11,"endColumn":17},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["282","283"],"Unnecessary escape character: \\-.",["284","285"],["286","287"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isFocus' and 'validate'. Either include them or remove the dependency array.","ArrayExpression",["288"],"no-native-reassign",["289"],"no-negated-in-lhs",["290"],["291","292"],["293","294"],["295","296"],["297"],"React Hook useEffect has a missing dependency: 'getThumbnail'. Either include it or remove the dependency array.",["298"],["289"],["290"],"'setLimit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["299"],["289"],["290"],["289"],["290"],["289"],["290"],"React Hook useEffect has missing dependencies: 'checkLike', 'getSubscribtion', 'getVideoById', and 'getVideos'. Either include them or remove the dependency array.",["300"],"React Hook useEffect has a missing dependency: 'getVideos'. Either include it or remove the dependency array.",["301"],"React Hook useEffect has missing dependencies: 'getChanelById' and 'getSubscribtion'. Either include them or remove the dependency array.",["302"],"React Hook useEffect has a missing dependency: 'checkSubscribe'. Either include it or remove the dependency array.",["303"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["304"],"React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.",["305"],"React Hook useEffect has a missing dependency: 'getChanelById'. Either include it or remove the dependency array.",["306"],"React Hook useEffect has missing dependencies: 'checkSubscribe', 'currentUser.id', and 'props.data.chanel.id'. Either include them or remove the dependency array.",["307"],["308"],"React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["309"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getSubscribtion'. Either include it or remove the dependency array.",["310"],{"messageId":"311","fix":"312","desc":"313"},{"messageId":"314","fix":"315","desc":"316"},{"messageId":"311","fix":"317","desc":"313"},{"messageId":"314","fix":"318","desc":"316"},{"messageId":"311","fix":"319","desc":"313"},{"messageId":"314","fix":"320","desc":"316"},{"desc":"321","fix":"322"},"no-global-assign","no-unsafe-negation",{"messageId":"311","fix":"323","desc":"313"},{"messageId":"314","fix":"324","desc":"316"},{"messageId":"311","fix":"325","desc":"313"},{"messageId":"314","fix":"326","desc":"316"},{"messageId":"311","fix":"327","desc":"313"},{"messageId":"314","fix":"328","desc":"316"},{"desc":"321","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"346","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},"removeEscape",{"range":"355","text":"356"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"357","text":"358"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"359","text":"356"},{"range":"360","text":"358"},{"range":"361","text":"356"},{"range":"362","text":"358"},"Update the dependencies array to be: [value, submit, isFocus, validate]",{"range":"363","text":"364"},{"range":"365","text":"356"},{"range":"366","text":"358"},{"range":"367","text":"356"},{"range":"368","text":"358"},{"range":"369","text":"356"},{"range":"370","text":"358"},{"range":"371","text":"364"},"Update the dependencies array to be: [getThumbnail]",{"range":"372","text":"373"},"Update the dependencies array to be: [currentUser, getUser]",{"range":"374","text":"375"},"Update the dependencies array to be: [checkLike, getSubscribtion, getVideoById, getVideos, id]",{"range":"376","text":"377"},"Update the dependencies array to be: [getVideos]",{"range":"378","text":"379"},"Update the dependencies array to be: [getChanelById, getSubscribtion, id]",{"range":"380","text":"381"},"Update the dependencies array to be: [chanel.id, checkSubscribe]",{"range":"382","text":"383"},"Update the dependencies array to be: [props]",{"range":"384","text":"385"},"Update the dependencies array to be: [checkUser]",{"range":"386","text":"387"},"Update the dependencies array to be: [getChanelById]",{"range":"388","text":"389"},"Update the dependencies array to be: [checkSubscribe, currentUser.id, props.data.chanel.id]",{"range":"390","text":"391"},{"range":"392","text":"389"},"Update the dependencies array to be: [loadUser, state.login]",{"range":"393","text":"394"},"Update the dependencies array to be: [getSubscribtion]",{"range":"395","text":"396"},[1408,1409],"",[1408,1408],"\\",[1429,1430],[1429,1429],[1442,1443],[1442,1442],[2106,2121],"[value, submit, isFocus, validate]",[1346,1347],[1346,1346],[1367,1368],[1367,1367],[1380,1381],[1380,1380],[2045,2060],[1379,1381],"[getThumbnail]",[3586,3599],"[currentUser, getUser]",[8876,8880],"[checkLike, getSubscribtion, getVideoById, getVideos, id]",[1981,1983],"[getVideos]",[5657,5661],"[getChanelById, getSubscribtion, id]",[5730,5741],"[chanel.id, checkSubscribe]",[396,398],"[props]",[1472,1474],"[checkUser]",[2239,2241],"[getChanelById]",[2088,2090],"[checkSubscribe, currentUser.id, props.data.chanel.id]",[6186,6188],[1509,1522],"[loadUser, state.login]",[1196,1198],"[getSubscribtion]"]